用HEAD表示当前版本
git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区（暂存区无修改，工作区有修改)

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。


git status命令会立刻告诉你哪些文件被删除了
命令git rm删掉，并且git commit
删错：git checkout -- test.txt（用版本库替换工作区）

与远程库关联：git remote add origin git@github.com:michaelliao/learngit.git
origin远程库的名字
michaelliao账户名

推送本地库到远程库：git push -u origin master
第一次推送master分支时，加上了-u参数
本地master推送推送到远程master分支，并关联起来，以后推送或拉取可以简化命令
每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改


从远程库克隆：git clone git@github.com:michaelliao/gitskills.git
克隆特定远程分支：git clone -b <branch name> [地址] 主要就是在clone的时候，后面添加branch的信息
选择远端分支：git checkout origin/xxx


git commit -amend  撤销上一次提交
git difftool --cached 文件名  对比缓存区和本地仓库文件差异



git init创建本地版本库
git remote add origin 绑定远程库
git add . 添加版本控制文件
git commit -m "" 提交修改
git push -u 远程库名  分支

对比本地版本跟远程版本
git diff 本地分支 origin/xxxx

获取远程库最新消息
git fetch origin



记住git帐号密码：git config --global credential.helper store




删除远程分支:
git branch -r -d origin/branch-name  
git push origin :branch-name  
